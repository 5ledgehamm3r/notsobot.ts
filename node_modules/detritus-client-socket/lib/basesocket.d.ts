import { BaseCollection, EventEmitter } from 'detritus-utils';
export declare const DependencyTypes: Readonly<{
    UWS: string;
    WS: string;
}>;
export declare const WebsocketDependency: {
    module: any;
    type: string;
};
export declare class BaseSocket extends EventEmitter {
    readonly pings: BaseCollection<string, {
        reject: Function;
        resolve: Function;
    }>;
    socket: any;
    constructor(url: string);
    readonly closed: boolean;
    readonly closing: boolean;
    readonly connected: boolean;
    readonly connecting: boolean;
    readonly using: string;
    send(data: any, callback?: Function): void;
    close(code?: number, reason?: string): void;
    onPong(data: any): void;
    ping(timeout?: number): Promise<number>;
}
